#!/usr/bin/env sh
 # Delete any config we might already have, as we will be treating it as bad during a rebuild
rm -fv plugins/WorldQLClient/config.yml

echo "Generating WorldQLConfig file at container runtime!"

echo "# WorldQL Connection Details" >> plugins/WorldQLClient/config.yml
echo "# Generated by Docker build scripts on [$(date)]" >> plugins/WorldQLClient/config.yml

# Go over our primary variables that will be used during the construction of the config file and assign defaults if values are missing
if [ -n "${WQL_CONTROL_PLANE_HOST}" ] || [ -n "${WQL_CONTROL_PLANE_HANDSHAKE_PORT}" ] || [ -n "${WQL_CONTROL_PLANE_PUSH_PORT}" ]; then
  # Make sure we write the config header
  echo "worldql:" >> plugins/WorldQLClient/config.yml

  # And write only what has a value
  if [ -n "${WQL_CONTROL_PLANE_HOST}" ]; then
    echo "  host: \"${WQL_CONTROL_PLANE_HOST}\"" >> plugins/WorldQLClient/config.yml
  fi

  if [ -n "${WQL_CONTROL_PLANE_HANDSHAKE_PORT}" ]; then
    echo "  handshake-port: \"${WQL_CONTROL_PLANE_HANDSHAKE_PORT}\"" >> plugins/WorldQLClient/config.yml
  fi

  if [ -n "${WQL_CONTROL_PLANE_PUSH_PORT}" ]; then
    echo "  push-port: \"${WQL_CONTROL_PLANE_PUSH_PORT}\"" >> plugins/WorldQLClient/config.yml
  fi
fi

if [ -n "${WQL_SELF_IDENT_HOST}" ]; then
  if [ -n "${WQL_CONTROL_PLANE_HOST}" ] || [ -n "${WQL_CONTROL_PLANE_HANDSHAKE_PORT}" ] || [ -n "${WQL_CONTROL_PLANE_PUSH_PORT}" ]; then
    echo "" >> plugins/WorldQLClient/config.yml
  fi

  echo "# Client (self) Hostname" >> plugins/WorldQLClient/config.yml
  echo "host: \"${WQL_SELF_IDENT_HOST}\"" >> plugins/WorldQLClient/config.yml
fi

# Echo out the config file so that the build log has a record of it
echo "WorldQL configuration file generates with the following content:"
echo "$(cat plugins/WorldQLClient/config.yml)"
echo ""
